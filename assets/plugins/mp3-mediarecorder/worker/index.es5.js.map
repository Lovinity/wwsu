{"version":3,"file":"index.es5.js","sources":["../../src/worker/index.ts"],"sourcesContent":["import { Mp3WorkerConfig, Mp3WorkerEncodingConfig } from '../types/config.type';\nimport { WorkerPostMessage } from '../types/post-message.type';\n\ninterface WorkerGlobalScope {\n    onmessage: (message: MessageEvent) => void;\n    postMessage: (message: any) => void;\n    addEventListener: (event: string, handler: Function) => void;\n}\n\ninterface VmsgWasm {\n    vmsg_init: (sampleRate: number) => number;\n    vmsg_encode: (ref: number, length: number) => number;\n    vmsg_free: (ref: number) => void;\n    vmsg_flush: (ref: number) => number;\n}\n\ntype WebAssemblyImports = Record<string, Record<string, WebAssembly.ImportValue>>;\n\nexport const initMp3MediaEncoder = ({ vmsgWasmUrl }: Mp3WorkerConfig) => {\n    // from vmsg\n    // Must be in sync with emcc settings!\n    const TOTAL_STACK = 5 * 1024 * 1024;\n    const TOTAL_MEMORY = 128 * 1024 * 1024;\n    const WASM_PAGE_SIZE = 64 * 1024;\n    const ctx = (self as unknown) as WorkerGlobalScope;\n    const memory = new WebAssembly.Memory({\n        initial: TOTAL_MEMORY / WASM_PAGE_SIZE,\n        maximum: TOTAL_MEMORY / WASM_PAGE_SIZE\n    });\n    let dynamicTop = TOTAL_STACK;\n    let imports: WebAssemblyImports = { env : {\n        memory,\n        sbrk: (increment: number): number => {\n            const oldDynamicTop = dynamicTop;\n            dynamicTop += increment;\n            return oldDynamicTop;\n        },\n        exit: () => ctx.postMessage({ type: 'ERROR', error: 'internal' }),\n        pow: Math.pow,\n        powf: Math.pow,\n        exp: Math.exp,\n        sqrtf: Math.sqrt,\n        cos: Math.cos,\n        log: Math.log,\n        sin: Math.sin\n    } }\n    const vmsg: Promise<VmsgWasm> = getWasmModule(vmsgWasmUrl, imports).then(wasm =>\n        (wasm.instance.exports as unknown) as VmsgWasm\n    );\n    let isRecording = false;\n    let vmsgRef: number;\n    let pcmLeft: Float32Array;\n\n    function getWasmModuleFallback (\n        url: string,\n        imports: WebAssemblyImports\n    ): Promise<WebAssembly.WebAssemblyInstantiatedSource> {\n        return fetch(url)\n            .then(response => response.arrayBuffer())\n            .then(buffer => WebAssembly.instantiate(buffer, imports));\n    };\n\n    function getWasmModule (\n        url: string,\n        imports: WebAssemblyImports\n    ): Promise<WebAssembly.WebAssemblyInstantiatedSource> {\n        if (!WebAssembly.instantiateStreaming) {\n            return getWasmModuleFallback(url, imports);\n        }\n\n        return WebAssembly.instantiateStreaming(fetch(url), imports).catch(() => getWasmModuleFallback(url, imports));\n    };\n\n    const onStartRecording = async (config: Mp3WorkerEncodingConfig): Promise<void> => {\n        const vmsgInstance = await vmsg;\n        isRecording = true;\n        vmsgRef = vmsgInstance.vmsg_init(config.sampleRate);\n        if (!vmsgRef || !vmsgInstance) {\n            throw new Error('init_failed');\n        }\n        const pcmLeftRef = new Uint32Array(memory.buffer, vmsgRef, 1)[0];\n        pcmLeft = new Float32Array(memory.buffer, pcmLeftRef);\n    };\n\n    const onStopRecording = async (): Promise<Blob> => {\n        const vmsgInstance = await vmsg;\n        isRecording = false;\n        if (vmsgInstance.vmsg_flush(vmsgRef) < 0) {\n            throw new Error('flush_failed');\n        }\n        const mp3BytesRef = new Uint32Array(memory.buffer, vmsgRef + 4, 1)[0];\n        const size = new Uint32Array(memory.buffer, vmsgRef + 8, 1)[0];\n        const mp3Bytes = new Uint8Array(memory.buffer, mp3BytesRef, size);\n        const blob = new Blob([mp3Bytes], { type: 'audio/mpeg' });\n        vmsgInstance.vmsg_free(vmsgRef);\n        return blob;\n    };\n\n    const onDataReceived = async (data: ArrayLike<number>): Promise<void> => {\n        if (!isRecording) {\n            return;\n        }\n\n        pcmLeft.set(data);\n        const vmsgInstance = await vmsg;\n        const encodedBytesAmount = vmsgInstance.vmsg_encode(vmsgRef, data.length);\n        if (encodedBytesAmount < 0) {\n            throw new Error('encoding_failed');\n        }\n    };\n\n    ctx.addEventListener('message', async (event: MessageEvent) => {\n        const message: WorkerPostMessage = event.data;\n        try {\n            switch (message.type) {\n                case 'START_RECORDING': {\n                    await onStartRecording(message.config);\n                    ctx.postMessage({ type: 'WORKER_RECORDING' });\n                    break;\n                }\n                case 'DATA_AVAILABLE': {\n                    await onDataReceived(message.data);\n                    break;\n                }\n                case 'STOP_RECORDING': {\n                    const blob = await onStopRecording();\n                    ctx.postMessage({ type: 'BLOB_READY', blob });\n                    break;\n                }\n            }\n        } catch (err) {\n            ctx.postMessage({ type: 'ERROR', error: err.message });\n        }\n    });\n};\n"],"names":[],"mappings":"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"}