// WORK ON THIS
<!DOCTYPE html>
<head>
<link rel="stylesheet" href="../../../bootstrap/css/bootstrap.min.css">
<link rel="stylesheet" href="../../../bootstrap/css/bootstrap.datetimepicker.css">
<script src="../../js/jquery-3.2.1.min.js"></script>
<script src="../../js/popper.js"></script>
<script src="../../js/moment.min.js"></script>
<script src="../../bootstrap/js/bootstrap.min.js"></script>
<script src="../../bootstrap/js/bootstrap.datetimepicker.js"></script>
<title>WWSU Director Timesheets</title>
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
</head>
<html>
<body>
<h1>WWSU Director Timesheets</h1>
<p>Click a clock to edit it. You must be a super director to edit clocks.</p>
<%- body %>
<p>Time color key: <br /><br /><span class="badge badge-primary">Approved</span> - Approved clocks count towards weekly hours. Clocks are auto-approved if the director's specified clock-in or clock-out time was no more than 30 minutes from the time they logged their clock-in/out.<br /><span class="badge badge-success">In right now</span> - The director has not yet clocked out for the specified shift. Hours from clock-in to the current time are counted towards weekly hours.<br /><span class="badge badge-danger">Flagged</span> - Clock times that are 30 or more minutes off from the time the director logged them, or clocks in which the director was still clocked in at 11:59pm (auto-clock-out), get flagged, and need editing/approval by a super director before they count towards weekly hours.</p>

<!-- Modal -->
        <div class="modal fade" id="clockModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel2" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLabel2">Edit Clock</h5>
                        <a type="button" class="close" data-dismiss="trackModal" href="javascript:closeModal()" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </a>
                    </div>
                    <div class="modal-body" id="clock-body">
                        Please wait...
                    </div>
                    <div class="modal-footer">
                    </div>
                </div>
            </div>
        </div>
<script type="text/javascript">
$(document).ready(function(){

  //Initialize the datePicker(I have taken format as mm-dd-yyyy, you can     //have your owh)
  $("#weekly-date-picker").datetimepicker({
      format: 'MM-DD-YYYY'
  });

   //Get the value of Start and End of Week
  $('#weekly-date-picker').on('dp.change', function (e) {
      var value = $("#weekly-date-picker").val();
      var firstDate = moment(value, "MM/DD/YYYY").day(0).format("MM/DD/YYYY");
      var lastDate =  moment(value, "MM/DD/YYYY").day(6).format("MM/DD/YYYY");
      $("#weekly-date-picker").val(firstDate);
  });
});

function closeModal() {
$('#clockModal').modal('hide');
}

var theopts = {};

function escapeHTML(str) {
    var div = document.createElement('div');
    div.appendChild(document.createTextNode(str));
    return div.innerHTML;
}

function editClock(clockID, save = false) {
var modalBody = document.getElementById('clock-body');
if (!save)
{
$('#clockModal').modal('show');
modalBody.innerHTML = 'Loading clock...';
}
$('#trackModal').modal('handleUpdate');
if (!save)
{
$.ajax('/timesheet/' + clockID, {})
.then(
    function success(resHTML) {
        modalBody.innerHTML = `<form action="javascript:editClock(${clockID}, true)"><div class="form-group">
        <label for="uid">UID of super director:</label>
        <input type="text" class="form-control" id="uid" value="U">
        <label for="clock-in">Clock In:</label>
        <input type="text" class="form-control" id="clock-in" value="${moment(resHTML.time_in).format('YYYY-MM-DD HH:mm:ss')}">
        <label for="clock-out">Clock Out:</label>
        <input type="text" class="form-control" id="clock-out" value="${moment(resHTML.time_out).format('YYYY-MM-DD HH:mm:ss')}">
        <label class="custom-control custom-checkbox">
            <input type="checkbox" class="custom-control-input" id="clock-approved" ${(resHTML.approved) ? 'checked' : ''}>
            <span class="custom-control-indicator"></span>
            <span class="custom-control-description">Approved clock</span>
        </label>
        <button type="submit" class="btn btn-primary">Edit</button>
        </form>`;
        $('#clockModal').modal('handleUpdate');
    },

    function fail(data, status) {
        modalBody.innerHTML = 'Failed to load clock.';
    }
);
} else {
var buid = document.getElementById('uid');
var bclockin = document.getElementById('clock-in');
var bclockout = document.getElementById('clock-out');
var bapproved = document.getElementById('clock-approved');
$.ajax({
  type: "POST",
  url: '/timesheet/editclock',
  data: {uid: buid.value, ID: clockID, clockin: bclockin.value, clockout: bclockout.value, approved: (bapproved.checked ? 1 : 0)}
})
.then(
    function success(resHTML) {
        resHTML = JSON.parse(resHTML);
        modalBody.innerHTML = resHTML.response;
        $('#clockModal').modal('handleUpdate');
        filterDate();
    },

    function fail(data, status) {
        modalBody.innerHTML = 'Failed to edit clock.';
    }
);
}
}

function filterDate() {
var thedate = document.getElementById('weekly-date-picker');
var tableRef = document.getElementById('timesheet-table').getElementsByTagName('tbody')[0];
    for(var i = tableRef.rows.length; i > 0;i--)
        {
        tableRef.deleteRow(i -1);
        }
$.ajax('/timesheet/getweek?weekof=' + thedate.value, {})
.then(
    function success(resHTML) {
resHTML = JSON.parse(resHTML);
for (var key in resHTML) {
    if (resHTML.hasOwnProperty(key)) {
        var newRow = tableRef.insertRow(tableRef.rows.length);
        newRow.classList.add(`table-info`);
        var cell = newRow.insertCell(0);
        cell.innerHTML = key;
        var cell = newRow.insertCell(1);
        resHTML[key]['0'].forEach(function(clock) {
            cell.innerHTML += `${clock.in}<br />`;
        });
        var cell = newRow.insertCell(2);
        resHTML[key]['0'].forEach(function(clock) {
            cell.innerHTML += `${clock.out}<br />`;
        });
        var cell = newRow.insertCell(3);
        resHTML[key]['1'].forEach(function(clock) {
            cell.innerHTML += `${clock.in}<br />`;
        });
        var cell = newRow.insertCell(4);
        resHTML[key]['1'].forEach(function(clock) {
            cell.innerHTML += `${clock.out}<br />`;
        });
        var cell = newRow.insertCell(5);
        resHTML[key]['2'].forEach(function(clock) {
            cell.innerHTML += `${clock.in}<br />`;
        });
        var cell = newRow.insertCell(6);
        resHTML[key]['2'].forEach(function(clock) {
            cell.innerHTML += `${clock.out}<br />`;
        });
        var cell = newRow.insertCell(7);
        resHTML[key]['3'].forEach(function(clock) {
            cell.innerHTML += `${clock.in}<br />`;
        });
        var cell = newRow.insertCell(8);
        resHTML[key]['3'].forEach(function(clock) {
            cell.innerHTML += `${clock.out}<br />`;
        });
        var cell = newRow.insertCell(9);
        resHTML[key]['4'].forEach(function(clock) {
            cell.innerHTML += `${clock.in}<br />`;
        });
        var cell = newRow.insertCell(10);
        resHTML[key]['4'].forEach(function(clock) {
            cell.innerHTML += `${clock.out}<br />`;
        });
        var cell = newRow.insertCell(11);
        resHTML[key]['5'].forEach(function(clock) {
            cell.innerHTML += `${clock.in}<br />`;
        });
        var cell = newRow.insertCell(12);
        resHTML[key]['5'].forEach(function(clock) {
            cell.innerHTML += `${clock.out}<br />`;
        });
        var cell = newRow.insertCell(13);
        resHTML[key]['6'].forEach(function(clock) {
            cell.innerHTML += `${clock.in}<br />`;
        });
        var cell = newRow.insertCell(14);
        resHTML[key]['6'].forEach(function(clock) {
            cell.innerHTML += `${clock.out}<br />`;
        });
        var cell = newRow.insertCell(15);
        cell.innerHTML += `${resHTML[key]['hours']}`;
    }
}
    },

    function fail(data, status) {
        var newRow = tableRef.insertRow(tableRef.rows.length);
        newRow.classList.add(`table-danger`);
        var cell = newRow.insertCell(0);
        cell.innerHTML = 'ERROR fetching timesheets';
    }
);
}

filterDate();
</script>
</body>
</html>
